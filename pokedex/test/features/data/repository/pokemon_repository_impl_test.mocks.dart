// Mocks generated by Mockito 5.1.0 from annotations
// in pokedex/test/features/data/repository/pokemon_repository_impl_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i3;

import 'package:mockito/mockito.dart' as _i1;
import 'package:pokedex/features/pokeman/data/models/pokemon_model.dart' as _i4;

import '../../../core/utils/network_info/fake_network_info.dart' as _i6;
import '../data_sources/fake_pokemon_local_data_source.dart' as _i5;
import '../data_sources/fake_pokemon_remote_data_source.dart' as _i2;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types

/// A class which mocks [FakePokemonRemoteDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockFakePokemonRemoteDataSource extends _i1.Mock
    implements _i2.FakePokemonRemoteDataSource {
  MockFakePokemonRemoteDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<List<_i4.PokemonModel>> getInitialPokeMans() =>
      (super.noSuchMethod(Invocation.method(#getInitialPokeMans, []),
              returnValue:
                  Future<List<_i4.PokemonModel>>.value(<_i4.PokemonModel>[]))
          as _i3.Future<List<_i4.PokemonModel>>);
  @override
  _i3.Future<List<_i4.PokemonModel>> getMorePokeMans({int? offset}) => (super
      .noSuchMethod(Invocation.method(#getMorePokeMans, [], {#offset: offset}),
          returnValue:
              Future<List<_i4.PokemonModel>>.value(<_i4.PokemonModel>[])) as _i3
      .Future<List<_i4.PokemonModel>>);
}

/// A class which mocks [FakePokemonLocalDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockFakePokemonLocalDataSource extends _i1.Mock
    implements _i5.FakePokemonLocalDataSource {
  MockFakePokemonLocalDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<void> cacheFavoritePokemon(_i4.PokemonModel? pokemonToCache) =>
      (super.noSuchMethod(
          Invocation.method(#cacheFavoritePokemon, [pokemonToCache]),
          returnValue: Future<void>.value(),
          returnValueForMissingStub: Future<void>.value()) as _i3.Future<void>);
  @override
  _i3.Future<List<_i4.PokemonModel>> getCachedFavoritePokemons() =>
      (super.noSuchMethod(Invocation.method(#getCachedFavoritePokemons, []),
              returnValue:
                  Future<List<_i4.PokemonModel>>.value(<_i4.PokemonModel>[]))
          as _i3.Future<List<_i4.PokemonModel>>);
}

/// A class which mocks [FakeNetworkInfo].
///
/// See the documentation for Mockito's code generation for more information.
class MockFakeNetworkInfo extends _i1.Mock implements _i6.FakeNetworkInfo {
  MockFakeNetworkInfo() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<bool> get isConnected =>
      (super.noSuchMethod(Invocation.getter(#isConnected),
          returnValue: Future<bool>.value(false)) as _i3.Future<bool>);
}
