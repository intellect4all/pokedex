// Mocks generated by Mockito 5.1.0 from annotations
// in pokedex/test/features/presentation/pokemon_bloc/pokemon_bloc_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i5;

import 'package:dartz/dartz.dart' as _i3;
import 'package:mockito/mockito.dart' as _i1;
import 'package:pokedex/core/errors/failure.dart' as _i6;
import 'package:pokedex/core/usecases/usecase.dart' as _i8;
import 'package:pokedex/features/pokeman/domain/entities/pokemon.dart' as _i7;
import 'package:pokedex/features/pokeman/domain/entities/success_entity.dart'
    as _i11;
import 'package:pokedex/features/pokeman/domain/repository/pokemon_repository.dart'
    as _i2;
import 'package:pokedex/features/pokeman/domain/usecases/add_pokemon_to_favorites_usecase.dart'
    as _i10;
import 'package:pokedex/features/pokeman/domain/usecases/get_initial_pokemons_usecase.dart'
    as _i4;
import 'package:pokedex/features/pokeman/domain/usecases/get_more_pokemons_usecase.dart'
    as _i9;
import 'package:pokedex/features/pokeman/domain/usecases/remove_pokemon_from_favorites_local_usecase.dart'
    as _i12;
import 'package:pokedex/features/pokeman/presentation/pokemon_helper.dart'
    as _i13;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types

class _FakePokemonRepository_0 extends _i1.Fake
    implements _i2.PokemonRepository {}

class _FakeEither_1<L, R> extends _i1.Fake implements _i3.Either<L, R> {}

/// A class which mocks [GetInitialPokemonsUseCase].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetInitialPokemonsUseCase extends _i1.Mock
    implements _i4.GetInitialPokemonsUseCase {
  MockGetInitialPokemonsUseCase() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.PokemonRepository get repository =>
      (super.noSuchMethod(Invocation.getter(#repository),
          returnValue: _FakePokemonRepository_0()) as _i2.PokemonRepository);
  @override
  _i5.Future<_i3.Either<_i6.Failure, List<_i7.Pokemon>>> call(
          _i8.NoParams? params) =>
      (super.noSuchMethod(Invocation.method(#call, [params]),
          returnValue: Future<_i3.Either<_i6.Failure, List<_i7.Pokemon>>>.value(
              _FakeEither_1<_i6.Failure, List<_i7.Pokemon>>())) as _i5
          .Future<_i3.Either<_i6.Failure, List<_i7.Pokemon>>>);
}

/// A class which mocks [GetMorePokemonsUseCase].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetMorePokemonsUseCase extends _i1.Mock
    implements _i9.GetMorePokemonsUseCase {
  MockGetMorePokemonsUseCase() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.PokemonRepository get repository =>
      (super.noSuchMethod(Invocation.getter(#repository),
          returnValue: _FakePokemonRepository_0()) as _i2.PokemonRepository);
  @override
  _i5.Future<_i3.Either<_i6.Failure, List<_i7.Pokemon>>> call(
          _i9.LoadMorePokemonsParams? params) =>
      (super.noSuchMethod(Invocation.method(#call, [params]),
          returnValue: Future<_i3.Either<_i6.Failure, List<_i7.Pokemon>>>.value(
              _FakeEither_1<_i6.Failure, List<_i7.Pokemon>>())) as _i5
          .Future<_i3.Either<_i6.Failure, List<_i7.Pokemon>>>);
}

/// A class which mocks [AddPokemonToFavoritesLocalUseCase].
///
/// See the documentation for Mockito's code generation for more information.
class MockAddPokemonToFavoritesLocalUseCase extends _i1.Mock
    implements _i10.AddPokemonToFavoritesLocalUseCase {
  MockAddPokemonToFavoritesLocalUseCase() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.PokemonRepository get repository =>
      (super.noSuchMethod(Invocation.getter(#repository),
          returnValue: _FakePokemonRepository_0()) as _i2.PokemonRepository);
  @override
  _i5.Future<_i3.Either<_i6.Failure, _i11.SuccessEntity>> call(
          _i10.AddToFavoritesParams? params) =>
      (super.noSuchMethod(Invocation.method(#call, [params]),
              returnValue:
                  Future<_i3.Either<_i6.Failure, _i11.SuccessEntity>>.value(
                      _FakeEither_1<_i6.Failure, _i11.SuccessEntity>()))
          as _i5.Future<_i3.Either<_i6.Failure, _i11.SuccessEntity>>);
}

/// A class which mocks [RemovePokemonFromFavoritesLocalUseCase].
///
/// See the documentation for Mockito's code generation for more information.
class MockRemovePokemonFromFavoritesLocalUseCase extends _i1.Mock
    implements _i12.RemovePokemonFromFavoritesLocalUseCase {
  MockRemovePokemonFromFavoritesLocalUseCase() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.PokemonRepository get repository =>
      (super.noSuchMethod(Invocation.getter(#repository),
          returnValue: _FakePokemonRepository_0()) as _i2.PokemonRepository);
  @override
  _i5.Future<_i3.Either<_i6.Failure, _i11.SuccessEntity>> call(
          _i12.RemovePokemonFromFavoritesLocalParams? params) =>
      (super.noSuchMethod(Invocation.method(#call, [params]),
              returnValue:
                  Future<_i3.Either<_i6.Failure, _i11.SuccessEntity>>.value(
                      _FakeEither_1<_i6.Failure, _i11.SuccessEntity>()))
          as _i5.Future<_i3.Either<_i6.Failure, _i11.SuccessEntity>>);
}

/// A class which mocks [PokemonHelper].
///
/// See the documentation for Mockito's code generation for more information.
class MockPokemonHelper extends _i1.Mock implements _i13.PokemonHelper {
  MockPokemonHelper() {
    _i1.throwOnMissingStub(this);
  }

  @override
  List<_i7.Pokemon> changePokemonFavoriteState(
          {_i7.Pokemon? pokemon,
          bool? isFavorite,
          List<_i7.Pokemon>? pokemons}) =>
      (super.noSuchMethod(
          Invocation.method(#changePokemonFavoriteState, [], {
            #pokemon: pokemon,
            #isFavorite: isFavorite,
            #pokemons: pokemons
          }),
          returnValue: <_i7.Pokemon>[]) as List<_i7.Pokemon>);
}
