// Mocks generated by Mockito 5.1.0 from annotations
// in pokedex/test/features/domain/usecases/remove_pokemon_from_favorites_local_test/remove_pokemon_from_favorites_local_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i4;

import 'package:dartz/dartz.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;
import 'package:pokedex/core/errors/failure.dart' as _i5;
import 'package:pokedex/features/pokeman/domain/entities/pokemon.dart' as _i6;
import 'package:pokedex/features/pokeman/domain/entities/success_entity.dart'
    as _i7;

import '../../../data/repository/pokeman_repo_impl.dart' as _i3;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types

class _FakeEither_0<L, R> extends _i1.Fake implements _i2.Either<L, R> {}

/// A class which mocks [PokemonRepositoryImpl].
///
/// See the documentation for Mockito's code generation for more information.
class MockPokemonRepositoryImpl extends _i1.Mock
    implements _i3.PokemonRepositoryImpl {
  MockPokemonRepositoryImpl() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i2.Either<_i5.Failure, List<_i6.Pokemon>>> getInitialPokeMans() =>
      (super.noSuchMethod(Invocation.method(#getInitialPokeMans, []),
          returnValue: Future<_i2.Either<_i5.Failure, List<_i6.Pokemon>>>.value(
              _FakeEither_0<_i5.Failure, List<_i6.Pokemon>>())) as _i4
          .Future<_i2.Either<_i5.Failure, List<_i6.Pokemon>>>);
  @override
  _i4.Future<_i2.Either<_i5.Failure, List<_i6.Pokemon>>> getMorePokeMans(
          {int? offset}) =>
      (super.noSuchMethod(
          Invocation.method(#getMorePokeMans, [], {#offset: offset}),
          returnValue: Future<_i2.Either<_i5.Failure, List<_i6.Pokemon>>>.value(
              _FakeEither_0<_i5.Failure, List<_i6.Pokemon>>())) as _i4
          .Future<_i2.Either<_i5.Failure, List<_i6.Pokemon>>>);
  @override
  _i4.Future<_i2.Either<_i5.Failure, _i7.SuccessEntity>>
      addPokemonToFavoritesLocal({_i6.Pokemon? pokemon}) => (super.noSuchMethod(
          Invocation.method(
              #addPokemonToFavoritesLocal, [], {#pokemon: pokemon}),
          returnValue: Future<_i2.Either<_i5.Failure, _i7.SuccessEntity>>.value(
              _FakeEither_0<_i5.Failure, _i7.SuccessEntity>())) as _i4
          .Future<_i2.Either<_i5.Failure, _i7.SuccessEntity>>);
  @override
  _i4.Future<_i2.Either<_i5.Failure, _i7.SuccessEntity>>
      removePokemonFromFavoritesLocal({_i6.Pokemon? pokemon}) => (super
          .noSuchMethod(
              Invocation.method(
                  #removePokemonFromFavoritesLocal, [], {#pokemon: pokemon}),
              returnValue:
                  Future<_i2.Either<_i5.Failure, _i7.SuccessEntity>>.value(
                      _FakeEither_0<_i5.Failure, _i7.SuccessEntity>())) as _i4
          .Future<_i2.Either<_i5.Failure, _i7.SuccessEntity>>);
}
